# -*- mode: python ; coding: utf-8 -*-


block_cipher = None

import subprocess
prefix = subprocess.run(['brew', '--prefix'], capture_output=True, text=True).stdout.strip()

a = Analysis(['tauon.py'],
             pathex=['/Users/kai/TauonMusicBox'],
             binaries=[('lib/libphazor.so', 'lib/'),
              (prefix + '/lib/libao*.dylib', '.'),
              (prefix + '/lib/libsamplerate*.dylib', '.'),
              (prefix + '/lib/libvorbis*.dylib', '.'),
              (prefix + '/lib/libmpg123*.dylib', '.'),
              (prefix + '/lib/libopus*.dylib', '.'),
              (prefix + '/lib/libopenmpt*.dylib', '.'),
              (prefix + '/bin/ffmpeg', '.'),
              (prefix + '/lib/libav*.dylib', '.'),
              (prefix + '/lib/libsw*.dylib', '.'),
              (prefix + '/lib/libpostproc*.dylib', '.'),
              (prefix + '/lib/libxcb*.dylib', '.'),
                (prefix + '/lib/libxcb-shm*.dylib', '.'),
                (prefix + '/lib/libxcb-shape*.dylib', '.'),
                (prefix + '/lib/libxcb-xfixes*.dylib', '.'),
                (prefix + '/lib/libSDL2-2*.dylib', '.'),
                (prefix + '/lib/librubberband*.dylib', '.'),
                (prefix + '/lib/libsamplerate*.dylib', '.'),
                (prefix + '/lib/libtesseract*.dylib', '.'),
                (prefix + '/lib/libass*.dylib', '.'),
                (prefix + '/lib/libvidstab*.dylib', '.'),
                (prefix + '/lib/libzmq*.dylib', '.'),
                (prefix + '/lib/libzimg*.dylib', '.'),
                (prefix + '/lib/libfontconfig*.dylib', '.'),
                (prefix + '/lib/libfreetype*.dylib', '.'),
                (prefix + '/lib/libbluray*.dylib', '.'),
                (prefix + '/lib/libgnutls*.dylib', '.'),
                (prefix + '/lib/libsrt*.dylib', '.'),
                (prefix + '/lib/libwebpmux*.dylib', '.'),
                (prefix + '/lib/libwebp*.dylib', '.'),
                (prefix + '/lib/liblzma*.dylib', '.'),
                (prefix + '/lib/libdav1d*.dylib', '.'),
                (prefix + '/lib/libopencore-amrwb*.dylib', '.'),
                (prefix + '/lib/libsnappy*.dylib', '.'),
                (prefix + '/lib/libaom*.dylib', '.'),
                (prefix + '/lib/libmp3lame*.dylib', '.'),
                (prefix + '/lib/libopencore-amrnb*.dylib', '.'),
                (prefix + '/lib/libopenjp2*.dylib', '.'),
                (prefix + '/lib/libopus*.dylib', '.'),
                (prefix + '/lib/librav1e*.dylib', '.'),
                (prefix + '/lib/libspeex*.dylib', '.'),
                (prefix + '/lib/libtheoraenc*.dylib', '.'),
                (prefix + '/lib/libtheoradec*.dylib', '.'),
                (prefix + '/lib/libogg*.dylib', '.'),
                (prefix + '/lib/libvorbis*.dylib', '.'),
                (prefix + '/lib/libvorbisenc*.dylib', '.'),
                (prefix + '/lib/libx264*.dylib', '.'),
                (prefix + '/lib/libx265*.dylib', '.'),
                (prefix + '/lib/libsoxr*.dylib', '.'),
                (prefix + '/lib/libpng16*.dylib', '.'),
                (prefix + '/lib/libp11-kit*.dylib', '.'),
                (prefix + '/lib/libidn2*.dylib', '.'),
                (prefix + '/lib/libunistring*.dylib', '.'),
                (prefix + '/lib/libtasn1*.dylib', '.'),
                (prefix + '/lib/libnettle*.dylib', '.'),
                (prefix + '/lib/libhogweed*.dylib', '.'),
                (prefix + '/lib/libgmp*.dylib', '.'),
                (prefix + '/lib/libintl*.dylib', '.'),
                #(prefix + '/lib/libffi*.dylib', '.'),
                #(prefix + '/lib/libssl*.dylib', '.'),
                #(prefix + '/lib/libcrypto*.dylib', '.'),
                (prefix + '/lib/libsodium*.dylib', '.'),
                (prefix + '/lib/liblept*.dylib', '.'),
                (prefix + '/lib/libjpeg*.dylib', '.'),
                (prefix + '/lib/libgif*.dylib', '.'),
                (prefix + '/lib/libtiff*.dylib', '.'),
                (prefix + '/lib/libfribidi*.dylib', '.'),
                (prefix + '/lib/libharfbuzz*.dylib', '.'),
                (prefix + '/lib/libgraphite2*.dylib', '.'),
                (prefix + '/lib/libglib-2*.dylib', '.'),
                (prefix + '/lib/libpcre*.dylib', '.'),
                (prefix + '/lib/libXau*.dylib', '.'),
                (prefix + '/lib/libXdmcp*.dylib', '.'),
              ],
             datas=[('assets', 'assets'), ('theme', 'theme'), ('input.txt', '.')],
             hiddenimports=[],
             hookspath=['extra/pyinstaller-hooks'],
             hooksconfig={},
             runtime_hooks=[],
             excludes=[],
             win_no_prefer_redirects=False,
             win_private_assemblies=False,
             cipher=block_cipher,
             noarchive=False)
pyz = PYZ(a.pure, a.zipped_data,
             cipher=block_cipher)

exe = EXE(pyz,
          a.scripts, 
          [],
          exclude_binaries=True,
          name='Tauon Music Box',
          debug=False,
          bootloader_ignore_signals=False,
          strip=False,
          upx=True,
          console=False,
          disable_windowed_traceback=False,
          target_arch=None,
          codesign_identity=None,
          entitlements_file=None , icon='assets/tau-mac.icns')
coll = COLLECT(exe,
               a.binaries,
               a.zipfiles,
               a.datas, 
               strip=False,
               upx=True,
               upx_exclude=[],
               name='TauonMusicBox')
app = BUNDLE(coll,
             name='TauonMusicBox.app',
             icon='assets/tau-mac.icns',
             bundle_identifier=None,
             info_plist={
                'LSEnvironment': {
                    'LANG': 'en_US.UTF-8',
                    'LC_CTYPE': 'en_US.UTF-8'
                }
             }
             )
